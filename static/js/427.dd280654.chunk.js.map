{"version":3,"file":"static/js/427.dd280654.chunk.js","mappings":"qPAIaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4JAUzBC,EAAQJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+EAMpBG,EAAQN,EAAAA,GAAAA,EAAQO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oDAKhBK,GAAYR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAaU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,8FAMzBQ,GAAWX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAoBa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,6CAK/BW,EAASd,EAAAA,GAAAA,OAAae,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,0U,mBCvB7Ba,EAAgBC,EAAAA,KAAaC,MAAM,CACvCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aAChDC,MAAOL,EAAAA,KAAaG,IAAI,GAAI,cAAcC,IAAI,GAAI,aAClDE,SAAUN,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,eAGzCG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEV,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDO,iBAAkBd,EAClBe,SAAU,SAACC,EAAQC,IAdF,SAACD,EAAQC,GAC5BR,GACES,EAAAA,EAAAA,IAAS,CACPf,KAAMa,EAAOb,KACbG,MAAOU,EAAOV,MACdC,SAAUS,EAAOT,WAGvB,CAOMY,CAAaH,EACf,EAAEI,UAEFC,EAAAA,EAAAA,MAACtC,EAAU,CAACuC,aAAa,MAAKF,SAAA,EAC5BC,EAAAA,EAAAA,MAACjC,EAAK,CAAAgC,SAAA,EACJT,EAAAA,EAAAA,KAACrB,EAAK,CAAA8B,SAAC,cACPT,EAAAA,EAAAA,KAACnB,EAAS,CAAC+B,KAAK,OAAOpB,KAAK,OAAOqB,UAAQ,KAC3Cb,EAAAA,EAAAA,KAAChB,EAAQ,CAACQ,KAAK,OAAOsB,UAAU,YAElCJ,EAAAA,EAAAA,MAACjC,EAAK,CAAAgC,SAAA,EACJT,EAAAA,EAAAA,KAACrB,EAAK,CAAA8B,SAAC,WACPT,EAAAA,EAAAA,KAACnB,EAAS,CAAC+B,KAAK,QAAQpB,KAAK,QAAQqB,UAAQ,KAC7Cb,EAAAA,EAAAA,KAAChB,EAAQ,CAACQ,KAAK,QAAQsB,UAAU,YAEnCJ,EAAAA,EAAAA,MAACjC,EAAK,CAAAgC,SAAA,EACJT,EAAAA,EAAAA,KAACrB,EAAK,CAAA8B,SAAC,cACPT,EAAAA,EAAAA,KAACnB,EAAS,CAAC+B,KAAK,WAAWpB,KAAK,WAAWqB,UAAQ,KACnDb,EAAAA,EAAAA,KAAChB,EAAQ,CAACQ,KAAK,WAAWsB,UAAU,YAGtCd,EAAAA,EAAAA,KAACb,EAAM,CAACyB,KAAK,SAAQH,SAAC,iBAI9B,E,UC1De,SAASM,IACtB,OACEf,EAAAA,EAAAA,KAACgB,EAAAA,GAAc,CAAAP,UACbC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,CAAAR,UACLT,EAAAA,EAAAA,KAAA,SAAAS,SAAO,oBAETT,EAAAA,EAAAA,KAACH,EAAY,QAIrB,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 10px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Title = styled.p`\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\nexport const FormField = styled(Field)`\n  width: 250px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 3px;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  margin-right: auto;\n  border-radius: 4px;\n  padding: 8px 12px;\n  background-color: #3f51b5;\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport {\n  Button,\n  ErrorMsg,\n  FormField,\n  Label,\n  StyledForm,\n  Title,\n} from './RegisterForm.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').max(30, 'Too Long!'),\n  email: Yup.string().min(14, 'Too Short!').max(30, 'Too Long!'),\n  password: Yup.string().min(7, 'Too Short!').max(30, 'Too Long!'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values, actions);\n      }}\n    >\n      <StyledForm autoComplete=\"off\">\n        <Label>\n          <Title>Username</Title>\n          <FormField type=\"text\" name=\"name\" required />\n          <ErrorMsg name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          <Title>Email</Title>\n          <FormField type=\"email\" name=\"email\" required />\n          <ErrorMsg name=\"email\" component=\"div\" />\n        </Label>\n        <Label>\n          <Title>Password</Title>\n          <FormField type=\"password\" name=\"password\" required />\n          <ErrorMsg name=\"password\" component=\"div\" />\n        </Label>\n\n        <Button type=\"submit\">Register</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nexport default function Register() {\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <RegisterForm />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Title","_templateObject3","FormField","Field","_templateObject4","ErrorMsg","ErrorMessage","_templateObject5","Button","_templateObject6","ContactSchema","Yup","shape","name","min","max","email","password","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","register","handleSubmit","children","_jsxs","autoComplete","type","required","component","Register","HelmetProvider","Helmet"],"sourceRoot":""}