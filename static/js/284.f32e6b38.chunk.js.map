{"version":3,"file":"static/js/284.f32e6b38.chunk.js","mappings":"oPAIaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4JAUzBC,EAAQJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+EAMpBG,EAAQN,EAAAA,GAAAA,EAAQO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oDAKhBK,GAAYR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAaU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,8FAMzBQ,GAAWX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAoBa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,6CAK/BW,EAASd,EAAAA,GAAAA,OAAae,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,0U,mBCvB7Ba,EAAgBC,EAAAA,KAAaC,MAAM,CACvCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,eAGrCC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,iBAAkBf,EAClBgB,SAAU,SAACC,EAAQC,IAhBJ,SAACD,EAAQC,GAC5BX,GACEY,EAAAA,EAAAA,IAAM,CACJN,MAAOI,EAAOJ,MACdC,SAAUG,EAAOH,YAIrBI,EAAQE,WACV,CAQQC,CAAaJ,EAAQC,EACvB,EAAER,UAEFY,EAAAA,EAAAA,MAACvC,EAAU,CAACwC,aAAa,MAAKb,SAAA,EAC5BY,EAAAA,EAAAA,MAAClC,EAAK,CAAAsB,SAAA,EACJD,EAAAA,EAAAA,KAACnB,EAAK,CAAAoB,SAAC,WACPD,EAAAA,EAAAA,KAACjB,EAAS,CAACgC,KAAK,QAAQrB,KAAK,QAAQsB,UAAQ,KAC7ChB,EAAAA,EAAAA,KAACd,EAAQ,CAACQ,KAAK,QAAQuB,UAAU,YAEnCJ,EAAAA,EAAAA,MAAClC,EAAK,CAAAsB,SAAA,EACJD,EAAAA,EAAAA,KAACnB,EAAK,CAAAoB,SAAC,cACPD,EAAAA,EAAAA,KAACjB,EAAS,CAACgC,KAAK,WAAWrB,KAAK,WAAWsB,UAAQ,KACnDhB,EAAAA,EAAAA,KAACd,EAAQ,CAACQ,KAAK,WAAWuB,UAAU,YAGtCjB,EAAAA,EAAAA,KAACX,EAAM,CAAC0B,KAAK,SAAQd,SAAC,iBAKhC,E,UCtDe,SAASiB,IACtB,OACElB,EAAAA,EAAAA,KAACmB,EAAAA,GAAc,CAAAlB,UACbY,EAAAA,EAAAA,MAAA,OAAAZ,SAAA,EACED,EAAAA,EAAAA,KAACoB,EAAAA,GAAM,CAAAnB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,aAETD,EAAAA,EAAAA,KAACH,EAAS,QAIlB,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 10px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Title = styled.p`\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\nexport const FormField = styled(Field)`\n  width: 250px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 3px;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  margin-right: auto;\n  border-radius: 4px;\n  padding: 8px 12px;\n  background-color: #3f51b5;\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  StyledForm,\n  Label,\n  Title,\n  FormField,\n  ErrorMsg,\n  Button,\n} from './LoginForm.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').max(30, 'Too Long!'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      logIn({\n        email: values.email,\n        password: values.password,\n      })\n    );\n\n    actions.resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={ContactSchema}\n        onSubmit={(values, actions) => {\n          handleSubmit(values, actions);\n        }}\n      >\n        <StyledForm autoComplete=\"off\">\n          <Label>\n            <Title>Email</Title>\n            <FormField type=\"email\" name=\"email\" required />\n            <ErrorMsg name=\"email\" component=\"div\" />\n          </Label>\n          <Label>\n            <Title>Password</Title>\n            <FormField type=\"password\" name=\"password\" required />\n            <ErrorMsg name=\"password\" component=\"div\" />\n          </Label>\n\n          <Button type=\"submit\">Log In</Button>\n        </StyledForm>\n      </Formik>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nexport default function Login() {\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n        <LoginForm />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Title","_templateObject3","FormField","Field","_templateObject4","ErrorMsg","ErrorMessage","_templateObject5","Button","_templateObject6","ContactSchema","Yup","shape","name","min","max","LoginForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","email","password","validationSchema","onSubmit","values","actions","logIn","resetForm","handleSubmit","_jsxs","autoComplete","type","required","component","Login","HelmetProvider","Helmet"],"sourceRoot":""}