{"version":3,"file":"static/js/828.a6e400d7.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactEditor/ContactEditor.styled.jsx","components/ContactEditor/ContactEditor.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilterValue } from 'redux/filterSlice';\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectAllContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 400px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px 6px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 8px 12px;\n  background-color: #3f51b5;\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n    box-shadow: 0 0 0 3px lightskyblue;\n  }\n  &:focus {\n    background-color: red;\n  }\n  &:active {\n    background-color: red;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Text, Wrapper, Button } from './Contact.styled';\nimport { BiUser } from 'react-icons/bi';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Wrapper>\n      <BiUser />\n      <Text>{`${name} : ${number}`}</Text>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Wrapper>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\n\nexport const ContactList = () => {\n  const getVisibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {getVisibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <Contact id={id} name={name} number={number} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  gap: 8px;\n  margin-bottom: 12px;\n  padding: 10px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  flex-grow: 1;\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n  resize: none;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  height: 40px;\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  padding: 0 8px;\n  border-radius: 4px;\n  background-color: #3f51b5;\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n    box-shadow: 0 0 0 3px lightskyblue;\n  }\n  &:focus {\n    background-color: green;\n  }\n  &:active {\n    background-color: green;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  Button,\n  ErrorMsg,\n  FormField,\n  StyledForm,\n} from './ContactEditor.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nconst ContactSchema = Yup.object().shape({\n  text: Yup.string().min(3, 'Too Short!').max(30, 'Too Long!'),\n});\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const getContacts = useSelector(selectAllContacts);\n\n  const handleSubmit = (values, actions) => {\n    const checkContact = () => {\n      for (const contact of getContacts) {\n        if (contact.name.toLowerCase() === values.text.toLowerCase()) {\n          alert(`${values.text} is already in contacts.`);\n          return true;\n        }\n      }\n    };\n\n    if (checkContact() === undefined) {\n      dispatch(addContact({ name: values.text, number: values.number }));\n      actions.resetForm();\n\n      return;\n    }\n    return;\n  };\n\n  return (\n    <Formik\n      initialValues={{ text: '', number: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values, actions);\n      }}\n    >\n      <StyledForm autoComplete=\"off\">\n        <label>\n          <FormField type=\"text\" name=\"text\" required />\n          <ErrorMsg name=\"text\" component=\"div\" />\n        </label>\n        <label>\n          <FormField type=\"text\" name=\"number\" required />\n          <ErrorMsg name=\"number\" component=\"div\" />\n        </label>\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  width: 400px;\n  margin-bottom: 12px;\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n  resize: none;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts, selectFilterValue } from 'redux/filterSlice';\nimport { StyledInput } from './ContactFilter.styled';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n\n  return (\n    <StyledInput\n      type=\"text\"\n      value={filterValue}\n      onChange={evt => {\n        dispatch(filterContacts(evt.target.value));\n      }}\n    />\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n        <ContactEditor />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <ContactFilter />\n        <ContactList />\n      </>\n    </HelmetProvider>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectAllContacts","items","selectVisibleContacts","createSelector","selectFilterValue","filterValue","filter","contact","name","toLowerCase","includes","List","styled","_templateObject","_taggedTemplateLiteral","Wrapper","Text","_templateObject2","Button","_templateObject3","Contact","_ref","id","number","dispatch","useDispatch","_jsxs","children","_jsx","BiUser","concat","type","onClick","deleteContact","ContactList","getVisibleContacts","useSelector","map","StyledForm","Form","FormField","Field","ErrorMsg","ErrorMessage","_templateObject4","ContactSchema","Yup","shape","text","min","max","ContactEditor","getContacts","Formik","initialValues","validationSchema","onSubmit","values","actions","undefined","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","alert","err","e","f","checkContact","addContact","resetForm","handleSubmit","autoComplete","required","component","StyledInput","ContactFilter","onChange","evt","filterContacts","target","Contacts","isLoading","useEffect","fetchContacts","HelmetProvider","_Fragment","Helmet"],"sourceRoot":""}